컴파일 순서
	1. 디버그 : 오류 검사 
	2. 빌드 : 프로그램 생성 
	3. 링크 : 생성된 프로그램까지의 경로를 저장한다.
	4. 실행 

예외처리
	1. 컴파일 오류: 빨간줄, 문법오류 	
	2 .빌드 오류 : 실행하자마자 오류
	3. 런타임 오류: 잘 실행되다가 갑자기 오류, 사용자의 입력 및 외부 요인에 의한 오류 

	예외 == 런타임 오류 

	런타임 오류는 제어문으로 막을 수 없는 경우가 생긴다. 이 때, 예외 처리 문법으로
	해결할 수 있다.

예외처리 문법	
	try{
		오류가 발생할 수 있는 문장;
	}catch(예외이름 객체명){
		오류 발생 시 실행할 문장;
	}catch(예외이름 객체명){
                오류 발생 시 실행할 문장;
        }
	....
	}finally{
		오류가 발생하든 말든 무조건 실행
		외부에 있는거랑 자바랑 연결할 때 열고 닫아야 하는데
		메모리 누수를 막기 위해 닫아주는 코드말고는 거의 없다.
	} 


예외 발생
	직접 예외를 발생시키기 위해서는 예외 던지기를 사용해야 하며, 이 때 생성자 호출전 throw 키워드를 사용한다.
	ex) throw new BadWordException();

사용자 정의 예외
	기본적으로 제공되는 예외가 아닌 특정 상황에서 직접 예외를 만들 수 있다.
	Exception or RuntimeException을 상속받아서 예외 클래스를 선언해야한다.
	1. Exception은 컴파일 오류가 발생하기 때문에 예외처리를 강제로 해야함
	2. RuntimeException은 컴파일 오류가 발생하지 않기 떄문에 예외처리 선택가	능

보통 1번을 많이 쓰게됨	


